∇res ← integer_arithmetic; l; r
l ← ⎕
r ← ⎕
res ← 6 2 ⍴ 'sum' (l+r) 'diff' (l-r) 'prod' (l×r) 'quot' (⌊l÷r) 'rem' (r|l) 'pow' (l*r)
∇
X←⎕NS ⍬
X.this←'that'
X.foo←88
X.this
that
X.(foo this)
88  that
sales ← ⎕NS ⍬
sales.(prices quantities) ← (100 98.4 103.4 110.16) (10  12 8  10)
sales.(revenue ← prices +.× quantities)
sales.revenue
binsrch←{
⎕IO(⍺{
⍵<⍺:⍬
mid←⌊(⍺+⍵)÷2
⍺⍺[mid]>⍵⍵:⍺∇mid-1
⍺⍺[mid]<⍵⍵:(mid+1)∇⍵
mid
}⍵)⎕IO+(≢⍺)-1
}
∇CAESAR[⎕]∇
∇
[0]   A←K CAESAR V
[1]   A←'AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz'
[2]   ((,V∊A)/,V)←A[⎕IO+52|(2×K)+((A⍳,V)-⎕IO)~52]
[3]   A←V
∇
FACTORIAL←{×/⍳⍵}
∇ product ← a multiply b
product ← a × b
∇
multiply ← {⍺×⍵}
{⍵≡⌽⍵} 'abc'
0
{⍵≡⌽⍵} '⍋racecar⍋'
1
sum  ←  +/
prod ←  ×/
a ←  1 2 3 4 5
sum  a
15
prod a
120
hanoi←{
move←{
n from to via←⍵
n≤0:⍬
l←∇(n-1) from via to
r←∇(n-1) via to from
l,(⊂from to),r
}
'⊂Move disk from pole ⊃,I1,⊂ to pole ⊃,I1'⎕FMT↑move ⍵
}